name: Auto Build and Release

on:
  push:
    branches: [ master, main ] # 当推送到 master 或 main 分支时触发

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    # 需要授予发布 Release 的权限
    permissions:
      contents: write

    steps:
    # 1. 获取代码
    - name: Checkout code
      uses: actions/checkout@v4

    # 2. 设置 Java 环境
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # 3. 设置 Gradle（假设项目使用 Gradle）
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    # 4. 执行构建（编译、测试、打包）
    - name: Build with Gradle
      run: ./gradlew build

    # 5. 发布到 GitHub Release (示例使用 softprops/action-gh-release)
    - name: Create GitHub Release and Upload Asset
      uses: softprops/action-gh-release@v1
      with:
        # 使用提交SHA和时间戳生成唯一标签，避免重复
        tag_name: auto-build-${{ github.sha }}-${{ github.run_id }}
        name: Automatic Build for ${{ github.sha }}
        draft: false
        prerelease: true # 因为是自动构建，通常标记为预发布
        # 指定要上传的构建产物，根据你的项目构建输出调整路径
        files: |
          build/libs/*.jar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # 使用 GitHub 提供的令牌
