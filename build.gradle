plugins {
    id 'java'
}

compileJava.options.encoding = 'UTF-8'

def properties = new Properties()
file("src/main/resources/EtherHack/EtherHack.properties").withInputStream { properties.load(it) }

group = 'EtherHack'
version = properties.getProperty('version').replaceAll("'", "")

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    implementation 'org.ow2.asm:asm:9.2'
    implementation 'org.ow2.asm:asm-tree:9.2'

    implementation files('libs/fmod.jar')
    implementation files('libs/zombie.jar')
    implementation files('libs/se.jar')
    implementation files('libs/trove-3.0.3.jar')
    implementation files('libs/uncommons-maths-1.2.3.jar')
    implementation files('libs/lwjgl.jar')
    implementation files('libs/lwjgl-opengl.jar')
    implementation files('libs/lwjgl-glfw.jar')
    implementation files('libs/lwjgl_util.jar')
    implementation files('libs/lwjglx.jar')
}

jar {
    destinationDirectory = file('build')
    archiveFileName = 'EtherHack-' + version + '.jar'

    manifest {
        attributes 'Main-Class': 'EtherHack.Main'
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}